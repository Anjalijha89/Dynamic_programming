public static int Unbounded(int val[],int wt[],int W)
    {
        int n = val.length;
        int dp[][] = new int[n+1][W+1];
        for(int i=0;i<dp.length;i++) // initilize 0th  col
        {
            dp[i][0] = 0;
        }
        for(int j=0;j<dp.length;j++) // initilize 0th row
        {
            dp[0][j] = 0;
        }
        for(int i=1;i<n+1;i++)
        {
            for(int j=1;j<W+1;j++)
            {
                int v = val[i-1];    //VALUE of ith item
                int w = wt[i-1];     //weight of ith item
                if(w<= j)   //valid
                {
                    int incprofit = v + dp[i][j-w];  //include
                    int profit = dp[i-1][j];    //exclude
                    dp[i][j] = Math.max(incprofit,profit);
                }
                else  //invalid
                {

                    dp[i][j] =dp[i-1][j];
                }
            }
        }
        return dp[n][W];
    }
    public static void main(String args[])
    {
        int val[] = {15,14,10,45,30};
        int[] wt = {2,5,1,3,4};
        int W = 7;
        System.out.println(Unbounded(val,wt,W));
    }

    */


